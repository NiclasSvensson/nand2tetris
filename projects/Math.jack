// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;
    static int bitdepth;

    /** Initializes the library. */
    function void init() {
      var int i;

      let twoToThe = Array.new(bitdepth);
      let bitdepth = 16;
      let i = 0;
      while (i < bitdepth){
        if (i = 0) {
          let twoToThe[i] = 1;
        }
        else {
          let twoToThe[i] = 2*twoToThe[i-1];
        }
      }
      return;
    }

    function boolean bit(int x, int j){
      if (x & twoToThe[j]){
        return true;
      }
      else {
        return false;
      }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      return 0;
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
      return 0;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
      return 0;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      return 0;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      return 0;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      return 0;
    }
}
